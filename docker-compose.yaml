# Docker Compose file for Ostad project
# Services:
# - MongoDB 6.0 database
# - Mongo Express UI for MongoDB management
# - Backend Node.js server (built from Dockerfile-server)
# - Frontend app (built from Dockerfile-UI)
# Uses environment variables for credentials and persistent volume for MongoDB data

services:
  mongo:
    image: mongo:6.0
    container_name: ostad-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    container_name: ostad-mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongo
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile-server
    container_name: ostad-backend
    ports:
      - "5050:5050"
    depends_on:
      - mongo
    environment:
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile-UI
    container_name: ostad-frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  mongo-data: